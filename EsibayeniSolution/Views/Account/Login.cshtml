@using EsibayeniSolution.Models
@model LoginViewModel

@{

    /**/

    //ViewBag.Title = "Log in Page";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}

    <style>
        .input-group-addon {
            color: #20415f;
        }
    </style>
<br />
<br />



@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
<div class="panel panel-primary">
    <div class="panel-heading">
        <div class="form-group">
            <h4>Use a local account to log in.</h4>
        </div>
    </div>
    <div class="panel-body">

        @Html.AntiForgeryToken()
        @*<h4>Use a local account to log in.</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @*@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })*@
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-user"></span>
                    </span>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email e.g someone123@gmail.com" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @*@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })*@
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-lock"></span>
                    </span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe)
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Log in" class="btn btn-success" />
            </div>
        </div>

        <p>
            @Html.ActionLink("Register as a new user", "Register")
        </p>
        @* Enable this once you have account confirmation enabled for password reset functionality
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@

    </div>
    <div class="panel-footer">

    </div>
</div>
    }


    @*<div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>*@


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
